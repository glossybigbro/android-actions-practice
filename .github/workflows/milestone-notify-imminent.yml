name: "Notification - Notify Milestone Due Date"

# 참고: Slack 알림을 위해 GitHub Secrets에 SLACK_WEBHOOK_URL 및 SLACK_NOTIFY를 설정해야 합니다.
# 1. Slack에서 "Incoming Webhooks" 앱을 설치한 후, Webhook URL을 생성합니다.
# 2. 생성한 Webhook URL을 GitHub Secrets에 SLACK_WEBHOOK_URL이라는 이름으로 저장합니다.
# 3. Slack 알림을 활성화하려면 GitHub Secrets에 SLACK_NOTIFY 값을 "true"로 설정합니다.
#    예: Settings > Secrets and variables > Actions > New repository secret > Name: SLACK_WEBHOOK_URL, SLACK_NOTIFY

on:
  schedule:
    - cron: "0 0 * * *"  # 매일 자정에 실행
  workflow_dispatch:

env:
  DAYS_UNTIL_DUE: 3  # 마일스톤 알림 기준 일수

permissions: {}  # 기본 권한 제거

jobs:
  notify-milestones:
    runs-on: ubuntu-latest
    permissions:
      issues: read  # 마일스톤 상태 확인 권한

    steps:
      # jq 설치 여부 확인
      - name: Check if jq is Installed
        run: |
          if ! command -v jq &> /dev/null; then
            echo "Installing jq for JSON parsing..."
            sudo apt-get update && sudo apt-get install -y jq
          fi

      # 알림 기준 설정
      - name: Set Notification Threshold
        run: |
          days_until_due="${{ github.event.inputs.days_until_due || '3' }}"          
          if ! [[ "$days_until_due" =~ ^[0-9]+$ ]]; then
            echo "Error: Non-numeric value entered. days_until_due must be a number."
            exit 1
          fi
          echo "days_until_due=$days_until_due" >> $GITHUB_ENV

      # 마일스톤 마감 기한 확인
      - name: Check Milestone Due Dates
        env:
          SLACK_NOTIFY: ${{ secrets.SLACK_NOTIFY }} # Slack 알림 활성화 여부
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Slack Webhook URL
          days_until_due: ${{ env.days_until_due }}
        run: |
          # 설정된 알림 기준 시간을 초 단위로 변환
          due_seconds=$((DAYS_UNTIL_DUE * 86400))

          # Slack 알림 전송 함수 정의
          send_slack_notification() {
            local message=$1
            if [[ "$SLACK_NOTIFY" == "true" && -n "$SLACK_WEBHOOK_URL" ]]; then
              notification=$(jq -n --arg text "$message" '{text: $text}')
              response=$(curl -X POST -H 'Content-type: application/json' --data "$notification" "$SLACK_WEBHOOK_URL")
          
              # Slack 알림 실패 시 로그 기록 (워크플로우는 계속 실행)
              if [ $? -ne 0 ]; then
                echo "Failed to send Slack notification: $response"
              fi
            fi
          }

          # GitHub API를 통해 모든 열린 마일스톤 가져오기
          milestones=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/milestones?state=open&sort=due_on&direction=asc" \
            | jq -c '.[] | select(.due_on != null)')

          # 열린 마일스톤이 없을 경우 종료
          if [ -z "$milestones" ]; then
            echo "No active milestones."
            exit 0
          fi

          # 각 마일스톤의 남은 기한을 계산하여 알림 생성
          echo "$milestones" | while read -r milestone; do
            milestone_title=$(echo "$milestone" | jq -r '.title')
            milestone_due_date=$(echo "$milestone" | jq -r '.due_on')

            due_date_seconds=$(date -d "$milestone_due_date" +%s)
            now_seconds=$(date +%s)
            remaining_seconds=$(( due_date_seconds - now_seconds ))

            # 1. 마일스톤 기한이 이미 지난 경우
            if [ "$remaining_seconds" -lt 0 ]; then
              message="⚠️ Milestone '$milestone_title' due date has passed. Due date: $milestone_due_date"
              echo "$message"
              send_slack_notification "$message"
          
            # 2. 마일스톤 기한이 1일 이하로 남은 경우 (긴급 알림)
            elif [ "$remaining_seconds" -le 86400 ]; then
              message="⚠️ Milestone '$milestone_title' is due within 1 day. Due date: $milestone_due_date"
              echo "$message"
              send_slack_notification "$message"
          
            # 3. 마일스톤 기한이 설정된 기준일 이하로 남은 경우
            elif [ "$remaining_seconds" -le "$due_seconds" ]; then
              hours_left=$(( remaining_seconds / 3600 ))
              message="⚠️ Milestone '$milestone_title' is due within ${days_until_due} days. Hours remaining: ${hours_left} hours, Due date: $milestone_due_date"
              echo "$message"
              send_slack_notification "$message"
          
            # 4. 마일스톤 기한이 충분히 남은 경우
            else
              echo "Milestone '$milestone_title' is more than ${DAYS_UNTIL_DUE} days away."
            fi
          done
